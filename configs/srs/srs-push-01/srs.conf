#监听流的端口
listen              1935;
#最大链接数
max_connections     1000;
#配置日志答应到文件(file)/控制台(config)，需要和srs_log_level配合使用
srs_log_tank        file;
#是否为守护进程，如果要启动在console，那么需要配置daemon off;
daemon              on;
#制定配置文件的级别，默认级别是trace
#verbose:非常详细的日志，性能会很低，日志会非常多
#info:较为详细的日志，性能也受影响。
#trace:重要的日志，比较少
#warn:警告日志，SRS在控制台以黄色显示。若SRS运行较稳定，可以只打开这个日志
#error:错误日志，SRS在控制台以红色显示。
srs_log_level       trace;
#制定日志文件的位置.
srs_log_file        /usr/local/srs/log/srs.log;

#pid文件位置
pid                 /usr/local/srs/srs.pid;
http_api {
    enabled         on;
    listen          1985;
}
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
}
stats {
    network         0;
    disk            sda sdb xvda xvdb;
}
rtc_server {
    enabled         on;
    # Listen at udp://8000
    listen          8000;
    #
    # The $CANDIDATE means fetch from env, if not configed, use * as default.
    #
    # The * means retrieving server IP automatically, from all network interfaces,
    # @see https://github.com/ossrs/srs/issues/307#issuecomment-599028124
    candidate       $CANDIDATE;
}
vhost __defaultVhost__ {
    hls {
        enabled         on;
    }
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
    }
    rtc {
        enabled     on;
        bframe      discard;
    }
    forward {
            enabled on;
            destination 127.0.0.1:19350;
    }
    #开启集群模式
    cluster {
        #集群的模式，对于源站集群，值应该是local。
        mode            local;
        #是否开启源站集群
        origin_cluster  on;
        #源站集群中的其他源站的HTTP API地址
        #coworkers       172.24.7.3:1985 172.24.7.4:1985
    }
}
